{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA,QAAQ,iCAAiC,EAAE,mBAAO,CAAC,oIAA8C;;AAEjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA,2BAA2B,QAAQ,YAAY,YAAY,GAAG;AAC9D;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;AChDa;;AAEb,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,kBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;;;;;;UCdf;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,qBAAqB,mBAAO,CAAC,oDAAiB;;AAE9C;AACA;AACA;AACA,CAAC,C","sources":["./frontend/follow_toggle.js","../../../../../../node_modules/@babel/preset-env/lib/module-transformations.js","webpack/bootstrap","./frontend/twitter.js"],"sourcesContent":["const { default: moduleTransformations } = require(\"@babel/preset-env/lib/module-transformations\");\n\nclass FollowToggle{\n    constructor(button){\n        this.el = $(button);\n        this.followState = this.el.data(initial-follow-state);\n        this.userId = this.el.data(user-id);\n        this.render();\n        document.addEventListener(\"click\", this.handleClick.bind(this))\n    }\n\n    render() {\n        if (this.followState === \"unfollowed\") {\n            this.el.html(\"Follow!\");\n        } else {\n            this.el.html(\"Unfollow!\");\n        }\n    }\n\n    handleClick(event) {\n        event.preventDefault();\n        if (this.followState === \"unfollowed\") {\n            $.ajax({\n                url: `users/${this.userId}/follow`,\n                method: 'POST',\n                dataType: 'JSON'\n                // data: { user: { user_id: `${this.userId}`}}, //this isn't neccessary now, because we are passing the userId in the url, based the rails routes. The data represents the body\n                //if this is successful\n                //.then(change follow state to opposite, call render())\n            }).then( () => {\n                this.followState = \"followed\";\n                this.render();\n            })\n        } else {\n            $.ajax({\n                url: `users/${this.userId}/follow`,\n                method: 'DELETE',\n                dataType: 'JSON'\n            }).then( () => {\n                this.followState = \"unfollowed\";\n                this.render();\n            })\n        }\n    }\n}\n\nmodule.exports = FollowToggle; \n\n//when would you need to use more \".then\"s?\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  auto: \"transform-modules-commonjs\",\n  amd: \"transform-modules-amd\",\n  commonjs: \"transform-modules-commonjs\",\n  cjs: \"transform-modules-commonjs\",\n  systemjs: \"transform-modules-systemjs\",\n  umd: \"transform-modules-umd\"\n};\nexports.default = _default;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require(\"./follow_toggle\")\n\n$(() => {\n  let buttons = $(\"button.follow-toggle\");\n  buttons.each( (index, button) => new FollowToggle(button))\n})"],"names":[],"sourceRoot":""}